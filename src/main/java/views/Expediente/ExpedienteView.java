/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package views.Expediente;

import models.Expediente;
import models.Paciente;
import repositories.ExpedienteRepository;
import repositories.PacienteRepository;
import views.Paciente.AdministrarPacienteView;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.util.List;

/**
 *
 * @author byron.martinez
 */
public class ExpedienteView extends javax.swing.JFrame {

    private int idPaciente;
    /**
     * Creates new form ExpedienteView
     */
    public ExpedienteView() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        lblEdad = new javax.swing.JLabel();
        lblNombre = new javax.swing.JLabel();
        lblNombreDueno = new javax.swing.JLabel();
        lblCategoria = new javax.swing.JLabel();
        lblRaza = new javax.swing.JLabel();
        lblSexo = new javax.swing.JLabel();
        lblFechaInscripcion = new javax.swing.JLabel();
        lblAltura = new javax.swing.JLabel();
        lblPeso = new javax.swing.JLabel();
        lblPelaje = new javax.swing.JLabel();
        lblFechaNacimiento = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Microsoft Sans Serif", 1, 18)); // NOI18N
        jLabel1.setText("Expediente");

        lblEdad.setText("edad");

        lblNombre.setText("nombre");

        lblNombreDueno.setText("nombreDueno");

        lblCategoria.setText("categoria");

        lblRaza.setText("raza");

        lblSexo.setText("sexo");

        lblFechaInscripcion.setText("fechaInscripcion");

        lblAltura.setText("altura");

        lblPeso.setText("peso");

        lblPelaje.setText("pelaje");

        lblFechaNacimiento.setText("fechaNacimiento");

        jButton1.setText("Dar de baja");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jButton2.setText("Editar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblNombreDueno, javax.swing.GroupLayout.DEFAULT_SIZE, 196, Short.MAX_VALUE)
                            .addComponent(lblNombre, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblEdad, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblCategoria, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblRaza, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblSexo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(lblPelaje, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblPeso, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblFechaNacimiento, javax.swing.GroupLayout.DEFAULT_SIZE, 295, Short.MAX_VALUE)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jButton2)
                                    .addGap(18, 18, 18)
                                    .addComponent(jButton1)
                                    .addGap(40, 40, 40)))
                            .addComponent(lblAltura, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblFechaInscripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jSeparator1)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 469, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNombre)
                    .addComponent(lblFechaInscripcion))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNombreDueno)
                    .addComponent(lblAltura))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEdad)
                    .addComponent(lblPeso))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCategoria)
                    .addComponent(lblPelaje))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblRaza)
                    .addComponent(lblFechaNacimiento))
                .addGap(18, 18, 18)
                .addComponent(lblSexo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(25, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    public void setIdPaciente(int idPaciente) {
        this.idPaciente = idPaciente;
    }

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {
        // first ask for confirmation
        int dialogResult = JOptionPane.showConfirmDialog(null, "¿Está seguro que desea dar de baja a este paciente?", "Confirmar", JOptionPane.YES_NO_OPTION);
        if (dialogResult == JOptionPane.YES_OPTION) {
            // get expedientes and citas by paciente id
            List<Expediente> expedientes = new ExpedienteRepository().getExpedientesByPacienteId(this.idPaciente);
            List<models.Cita> citas = new repositories.CitaRepository().getCitasByPacienteId(this.idPaciente);

            // delete expedientes
            if (expedientes != null && !expedientes.isEmpty()) {
                for (Expediente expediente : expedientes) {
                    new ExpedienteRepository().delete(expediente.getId());
                }
            }

            // delete citas
            if (citas != null && !citas.isEmpty()) {
                for (models.Cita cita : citas) {
                    new repositories.CitaRepository().delete(cita.getId());
                }
            }

            // delete paciente
            new PacienteRepository().delete(this.idPaciente);
            this.dispose();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        AdministrarPacienteView administrarPacienteView = new AdministrarPacienteView("edit");
        administrarPacienteView.configPaciente(this.idPaciente);

        final int idPacienteLocal = this.idPaciente;
        administrarPacienteView.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosed(java.awt.event.WindowEvent windowEvent) {
                PacienteRepository pacienteRepository = new PacienteRepository();
                Paciente paciente = pacienteRepository.getById(idPacienteLocal);
                setPacienteInfo(paciente);
            }
        });

        administrarPacienteView.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    public void configPaciente() {
        PacienteRepository pacienteRepository = new PacienteRepository();
        Paciente paciente = pacienteRepository.getById(this.idPaciente);
        setPacienteInfo(paciente);

        jTable1.setModel(loadDataTable());
    }

    public DefaultTableModel loadDataTable() {
        ExpedienteRepository expedienteRepository = new ExpedienteRepository();
        List<Expediente> expedientes = expedienteRepository.getExpedientesByPacienteId(this.idPaciente);

        String[] columnNames = {"Diagnostico", "Medicamentos", "Vacunas", "Peso", "Altura"};
        DefaultTableModel model = new DefaultTableModel(columnNames, 0);

        if (expedientes != null && !expedientes.isEmpty()) {
            for (Expediente expediente : expedientes) {
                Object[] rowData = {
                        expediente.getDiagnostico(),
                        expediente.getMedicamentos(),
                        expediente.getVacunas(),
                        expediente.getPeso(),
                        expediente.getAltura()
                };
                model.addRow(rowData);
            }
        }

        return model;
    }

    private void setPacienteInfo(Paciente paciente) {
        lblNombre.setText("Nombre: " + paciente.getNombre());
        lblNombreDueno.setText("Nombre del dueño: " + paciente.getNombreDueno());
        lblEdad.setText("Edad: " + paciente.getEdad());
        lblCategoria.setText("Categoria: " + paciente.getIdCategoria());
        lblRaza.setText("Raza: " + paciente.getIdRaza());
        lblSexo.setText("Sexo: " + paciente.getSexo());
        lblFechaInscripcion.setText("Fecha de inscripción: " + paciente.getFechaInscripcion());
        lblAltura.setText("Altura: " + paciente.getAltura());
        lblPeso.setText("Peso: " + paciente.getPeso());
        lblPelaje.setText("Pelaje: " + paciente.getPelaje());
        lblFechaNacimiento.setText("Fecha de nacimiento: " + paciente.getFechaNacimiento());
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ExpedienteView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ExpedienteView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ExpedienteView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ExpedienteView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ExpedienteView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblAltura;
    private javax.swing.JLabel lblCategoria;
    private javax.swing.JLabel lblEdad;
    private javax.swing.JLabel lblFechaInscripcion;
    private javax.swing.JLabel lblFechaNacimiento;
    private javax.swing.JLabel lblNombre;
    private javax.swing.JLabel lblNombreDueno;
    private javax.swing.JLabel lblPelaje;
    private javax.swing.JLabel lblPeso;
    private javax.swing.JLabel lblRaza;
    private javax.swing.JLabel lblSexo;
    // End of variables declaration//GEN-END:variables
}
